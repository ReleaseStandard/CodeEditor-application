IDENTIFICATION DIVISION.
PROGRAM-ID. SQLAPP.
ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
SOURCE-COMPUTER.  LFA15AB.
OBJECT-COMPUTER.  LFA15AB.
DATA DIVISION.
WORKING-STORAGE SECTION.
01  SQLCODE PIC S9(9) COMP.
01  SQLCODE-C1 PIC S9(9) COMP.

01  NAME PIC X(20).
01  RATING PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  SALARY PIC S9(6)V99 DISPLAY SIGN LEADING SEPARATE.
01  CITY PIC X(20).
01  CITY-INDIC PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  BONUS PIC S9(6)V99 DISPLAY SIGN LEADING SEPARATE.
01  BONUS-INDIC PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  PROJ-TITLE PIC X(20).
01  PNUM PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  DEPT-NO PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  MGR-ID PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  ZIPCODE PIC S9(9) DISPLAY SIGN LEADING SEPARATE.
01  MIN-SALARY PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  EMSG PIC X(150).
01  SP PIC S9(11) DISPLAY SIGN LEADING SEPARATE.
01  TOT-SAL PIC S9(8)V99 DISPLAY SIGN LEADING SEPARATE.

PROCEDURE DIVISION.
P0.

	* Retrieve the salary of anyone named Jones, and
	* update it to the minimum salary if it is currently
	* less than that minimum.
 *
MOVE 10000 TO MIN-SALARY
MOVE "Jones" TO NAME
MOVE 0 TO SP
CALL "OPEN_C1 IN OBJECT/MODLIB/COBOLAPP" USING NAME,
      SQLCODE
IF SQLCODE < 0 THEN
   CALL "RETURN_ERROR_MESSAGE IN OBJECT/MODLIB/COBOLAPP"
			             USING EMSG
   DISPLAY EMSG
ELSE PERFORM GET-C1 UNTIL SQLCODE NOT = 0
END-IF
IF SQLCODE < 0 THEN
   DISPLAY "ERROR FETCHING FROM CURSOR C1 -- ", SQLCODE
END-IF
CALL "CLOSE_C1 IN OBJECT/MODLIB/COBOLAPP" USING SQLCODE

	* Use a cursor to find anyone with a rating of 2, 
	* and then retrieve that rating doubled.
	*
MOVE 2 TO RATING
CALL "OPEN_C2 IN OBJECT/MODLIB/COBOLAPP" USING RATING, 
      SQLCODE
IF SQLCODE < 0 THEN
   CALL "RETURN_ERROR_MESSAGE IN OBJECT/MODLIB/COBOLAPP"
			            USING EMSG
   DISPLAY EMSG
ELSE PERFORM GET-C2 UNTIL SQLCODE NOT = 0
END-IF
IF SQLCODE < 0 THEN
   DISPLAY "ERROR FETCHING FROM CURSOR C2 -- ", SQLCODE
END-IF
CALL "CLOSE_C2 IN OBJECT/MODLIB/COBOLAPP" USING SQLCODE

	* Retrieve the city and the bonus for the employee
	* whose salary is $44,000.  Since a single row 
	* SELECT statement is used rather than a multiple 
 * row SELECT statement, there must be
	* only one such employee or an error occurs.
	*
MOVE 44000 TO SALARY
CALL "SELECT_INTO IN OBJECT/MODLIB/COBOLAPP"
      USING SQLCODE, CITY, BONUS, SALARY
IF SQLCODE < 0 THEN
   DISPLAY "ERROR PERFORMING SINGLETON SELECT -- ", 
          SQLCODE
ELSE
   DISPLAY "BONUS = ", BONUS
   DISPLAY "CITY  = ", CITY

END-IF

	* Repeat the previous query using indicator
	* variables for both the selection targets.
	*
MOVE 44000 TO SALARY
CALL "SELECT_INTO_INDIC IN OBJECT/MODLIB/COBOLAPP"
         USING CITY, BONUS, SALARY,
            BONUS-INDIC, CITY-INDIC, SQLCODE
IF SQLCODE < 0 THEN
   CALL "RETURN_ERROR_MESSAGE IN OBJECT/MODLIB/COBOLAPP"
                           USING EMSG
   DISPLAY EMSG
ELSE
   IF BONUS-INDIC >= 0
   DISPLAY "BONUS = ", BONUS
	ELSE
   DISPLAY "BONUS = <null>"
	END-IF
	IF CITY-INDIC >= 0
   DISPLAY "CITY  = ", CITY
	ELSE
   DISPLAY "CITY  = <null>"
 END-IF
END-IF

	* Use a searched DELETE statement to delete the "Quality
	* Assessment" project.  Then insert a different project with
	* the same name.  If the insertion fails, roll back the
	* transaction so that the original project remains.
	*
MOVE "Quality Assessment" TO PROJ-TITLE
CALL "DELETE_FROM IN OBJECT/MODLIB/COBOLAPP"
            USING PROJ-TITLE, SQLCODE
IF SQLCODE < 0 THEN
   DISPLAY "ERROR DELETING FROM PROJECT  -- ", SQLCODE
ELSE IF SQLCODE = 100
   DISPLAY "NO PROJECT ENTITIES WERE DELETED"
END-IF

MOVE 11 TO PNUM
MOVE "Quality Assessment" TO PROJ-TITLE
MOVE 5 TO DEPT-NO
MOVE 45873 TO MGR-ID
CALL "INSERT_INTO IN OBJECT/MODLIB/COBOLAPP"
         USING PNUM, PROJ-TITLE, DEPT-NO, MGR-ID, SQLCODE
IF SQLCODE < 0
   DISPLAY "ERROR INSERTING NEW PROJECT -- ", SQLCODE
   DISPLAY "ROLLING BACK TRANSACTION"
   CALL "ABORT IN OBJECT/MODLIB/COBOLAPP" USING SQLCODE
   IF SQLCODE < 0
      DISPLAY "ATTEMPTED ROLLBACK FAILED 0- ", SQLCODE
   END-IF
ELSE
   DISPLAY "ROW INSERTED INTO PROJECT TABLE"
END-IF

	* Insert a row into the ASSIGNMENT table and use values
	* selected from the EMPLOYEE table.
	*
MOVE "Granger" TO NAME
CALL "INSERT_FROM_SELECT IN OBJECT/MODLIB/COBOLAPP"
         USING NAME, SQLCODE
IF SQLCODE < 0
   DISPLAY "ERROR INSERTING FROM SELECT STATEMENT -- ", SQLCODE
ELSE IF SQLCODE = 100
   DISPLAY "NO ENTITIES SELECTED BY QUERY FOR INSERTION"
ELSE
   DISPLAY "INSERT FROM SELECT STATEMENT COMPLETED"
END-IF

	* Use the searched UPDATE statement to change Jones' city and postal
	* code. Upon successful completion of the transaction, apply all
	* changes made within the transaction.
	*
MOVE "Irvine" TO CITY
MOVE 927182005 TO ZIPCODE
MOVE "Jones" TO NAME
CALL "UPDATE_SEARCHED IN OBJECT/MODLIB/COBOLAPP"
            USING ZIPCODE, CITY, NAME, SQLCODE
IF SQLCODE < 0 THEN
   DISPLAY "ERROR UPDATING PERSON -- ", SQLCODE
ELSE
   DISPLAY "PERSON UPDATED -- COMMITTING CHANGES"
   CALL "ENDTRAN IN OBJECT/MODLIB/COBOLAPP"
            USING SQLCODE
   IF SQLCODE < 0
      DISPLAY "COMMIT FAILED -- ", SQLCODE
   END-IF
END-IF

STOP RUN.

	* After each salary increase, roll back the update if it causes
	* salary maximum to be exceeded.

GET-C1.
   CALL "FETCH_C1 IN OBJECT/MODLIB/COBOLAPP"
                           USING SALARY, SQLCODE
	IF SQLCODE = 0 THEN
   DISPLAY "SALARY = ", SALARY
   IF SALARY < MIN-SALARY
      CALL "SET_SAVEPOINT IN OBJECT/MODLIB/COBOLAPP"
               USING SQLCODE, SP
      CALL "UPDATE_POSITIONED IN OBJECT/MODLIB/COBOLAPP"
               USING SQLCODE-C1, MIN-SALARY
	IF SQLCODE-C1 < 0
      DISPLAY "ERROR IN POSITIONED UPDATE OF PERSON -- ",
                     SQLCODE-C1
	ELSE
   CALL "FIND_TOTAL_SALARY IN OBJECT/MODLIB/COBOLAPP"
                     USING SQLCODE, TOT-SAL
   IF TOT-SAL > 1000000
      CALL "CANCEL_TO_SAVEPT IN
                     OBJECT/MODLIB/COBOLAPP" USING
                     SQLCODE, SP
            END-IF
         END-IF
      END-IF
ELSE IF SQLCODE NOT = 100
   CALL "RETURN_ERROR_MESSAGE IN OBJECT/MODLIB/COBOLAPP"
                           USING EMSG
   DISPLAY EMSG
END-IF
.

GET-C2.
   CALL "FETCH_C2 IN OBJECT/MODLIB/COBOLAPP"
                           USING RATING, SQLCODE
   IF SQLCODE = 0 THEN
      DISPLAY "RATING * 2 = ", RATING
   ELSE IF SQLCODE NOT = 100
      DISPLAY "ERROR FETCHING FROM C2 -- SQLCODE = ", SQLCODE
   END-IF
   .
